// Event listeners fÃ¶r navigering console.log("ðŸš€ Script loading...");const portfolio = document.querySelector(".kvitto-svg-container");const KognitivetVideoLink = document.getElementsByClassName("KognitivetVideoLink");const KognitivetMusicLink = document.getElementsByClassName("KognitivetMusicLink");const Kognitivet_Video_and_Music_Link = document.getElementsByClassName("Kognitivet_Video_and_Music_Link");const VideosKognitivetContainer = document.getElementById("VideosKognitivetContainer");const MusicKognitivetContainer = document.getElementById("MusicKognitivetContainer");const ImageDesignContainer = document.getElementById("ImageDesignContainer");const WebDesignContainer = document.getElementById("WebDesignContainer");const UXDesignContainer = document.getElementById("UXDesignContainer");const AnimationDesignContainer = document.getElementById("AnimationDesignContainer");const ImageDesignLink = document.getElementsByClassName("ImageDesignLink");const BackArrows = document.querySelectorAll(".back_arrow");const crumbleVideos = document.querySelectorAll(".crumbleVideoClass");// Logga container-status vid sidladdning console.log("ðŸ“Š Container status check:");console.log("VideosKognitivetContainer:",VideosKognitivetContainer?.style.display || "not found");console.log("MusicKognitivetContainer:",MusicKognitivetContainer?.style.display || "not found");console.log("ImageDesignContainer:",ImageDesignContainer?.style.display || "not found");console.log("WebDesignContainer:",WebDesignContainer?.style.display || "not found");console.log("UXDesignContainer:",UXDesignContainer?.style.display || "not found");console.log("AnimationDesignContainer:",AnimationDesignContainer?.style.display || "not found");// Ta bort video-skapandet frÃ¥n bÃ¶rjan av filen och ersÃ¤tt med:const crumbleVideo = document.getElementById('crumbleVideo');const crumbleVideoReverse = document.getElementById('crumbleVideoReverse');if (!crumbleVideo || !crumbleVideoReverse) {console.error('Could not find crumbleVideo element')} // Global flagga fÃ¶r att fÃ¶rhindra samtidiga animationer let isTransitionPlaying = false;// HjÃ¤lpfunktion fÃ¶r att spela animationen och hantera Ã¶vergÃ¥ngar async function playTransitionAnimation(callback) {if (!crumbleVideo) {callback();return} // Om en animation redan spelar,ignorera denna fÃ¶rfrÃ¥gan if (isTransitionPlaying) {console.log('Animation already playing,skipping...');return} isTransitionPlaying = true;// Om video redan spelar,vÃ¤nta tills den Ã¤r klar eller avbryt den if (!crumbleVideo.paused) {try {crumbleVideo.pause()} catch (e) {// Ignorera fel vid paus } } // Reset video state crumbleVideo.currentTime = 0;crumbleVideo.style.display = 'block';try {await crumbleVideo.play();// Fadea ut portfolio Ã¶ver 0,3s nÃ¤r videon bÃ¶rjar spela portfolio.style.opacity = '0';// GÃ¶m portfolio helt efter fade-animationen Ã¤r klar setTimeout(() => {portfolio.style.display = 'none'},300);await new Promise(resolve => {crumbleVideo.onended = resolve});crumbleVideo.style.display = 'none';callback();crumbleVideo.currentTime = 0} catch (error) {console.error('Video playback failed:',error);callback()} finally {isTransitionPlaying = false} } // HjÃ¤lpfunktion fÃ¶r att spela animationen och hantera Ã¶vergÃ¥ngar async function playTransitionAnimationReverse(callback) {if (!crumbleVideoReverse) {callback();return} // Om en animation redan spelar,ignorera denna fÃ¶rfrÃ¥gan if (isTransitionPlaying) {console.log('Animation already playing,skipping reverse...');return} isTransitionPlaying = true;// Om video redan spelar,vÃ¤nta tills den Ã¤r klar eller avbryt den if (!crumbleVideoReverse.paused) {try {crumbleVideoReverse.pause()} catch (e) {// Ignorera fel vid paus } } // Reset video state crumbleVideoReverse.currentTime = 0;crumbleVideoReverse.style.display = 'block';portfolio.style.display = 'none';try {await crumbleVideoReverse.play();await new Promise(resolve => {crumbleVideoReverse.onended = resolve});crumbleVideoReverse.style.display = 'none';callback();crumbleVideoReverse.currentTime = 0} catch (error) {console.error('Reverse video playback failed:',error);callback()} finally {isTransitionPlaying = false} } // Funktion fÃ¶r att uppdatera video hÃ¶jden function updateVideoHeight() {const portfolioHeight = portfolio.offsetHeight;crumbleVideos.forEach(video => {video.style.height = `${portfolioHeight + 20}px`})} // Uppdatera hÃ¶jden nÃ¤r sidan laddas updateVideoHeight();// Uppdatera hÃ¶jden om fÃ¶nstret Ã¤ndrar storlek window.addEventListener('resize',updateVideoHeight);// Uppdatera back arrow event listener BackArrows.forEach((BackArrow) => {BackArrow.addEventListener('click',async (event) => {console.log("BackArrow clicked");// GÃ¶m fÃ¶rst alla containers const containers = [ VideosKognitivetContainer,MusicKognitivetContainer,ImageDesignContainer,WebDesignContainer,UXDesignContainer,AnimationDesignContainer ];containers.forEach(container => {if (container) {console.log("ðŸ”™ Hiding container:",container.id);container.style.display = "none"} });// StÃ¤da upp physics om det behÃ¶vs if (window.currentPhysics) {cleanupPhysics( window.currentPhysics.engine,window.currentPhysics.render,window.currentPhysics.runner );window.currentPhysics = null} // Spela reverse animationen och visa portfolio efter await playTransitionAnimationReverse(() => {portfolio.style.display = "flex";portfolio.style.position = "fixed";portfolio.style.top = "50%";portfolio.style.left = "50%";portfolio.style.transform = "translate(-50%,-50%)";portfolio.style.width = "100vw";portfolio.style.height = "100vh";portfolio.style.alignItems = "center";portfolio.style.justifyContent = "center";portfolio.style.zIndex = "1";portfolio.style.opacity = "1"})})});// Navigation event listeners fÃ¶r olika sektioner for (let i = 0;i < KognitivetVideoLink.length;i++) {KognitivetVideoLink[i].addEventListener('click',(event) => {console.log("KognitivetVideoLink clicked");playTransitionAnimation(() => {// Visa efter animationen Ã¤r klar VideosKognitivetContainer.style.display = "flex"})})} for (let i = 0;i < KognitivetMusicLink.length;i++) {KognitivetMusicLink[i].addEventListener('click',(event) => {console.log("KognitivetMusicLink clicked");playTransitionAnimation(() => {// Visa efter animationen Ã¤r klar MusicKognitivetContainer.style.display = "flex"})})} for (let i = 0;i < Kognitivet_Video_and_Music_Link.length;i++) {Kognitivet_Video_and_Music_Link[i].addEventListener('click',(event) => {console.log("Kognitivet_Video_and_Music_Link clicked");playTransitionAnimation(() => {// Visa efter animationen Ã¤r klar MusicKognitivetContainer.style.display = "flex";VideosKognitivetContainer.style.display = "flex"})})} for (let i = 0;i < ImageDesignLink.length;i++) {ImageDesignLink[i].addEventListener('click',(event) => {console.log("ImageDesignLink clicked");playTransitionAnimation(async () => {// Visa efter animationen Ã¤r klar ImageDesignContainer.style.display = "flex";setTimeout(async () => {await initPhysics()},200)})})} // Kopiera till urklipp funktion function copyToClipboard(text) {navigator.clipboard.writeText(text).then(() => {const messageElement = document.getElementById('copied-message');messageElement.style.display = 'block';setTimeout(() => {messageElement.style.display = 'none'},2000)}).catch(err => {console.error('Failed to copy text:',err)})} // Video hover info box hantering document.addEventListener('DOMContentLoaded',function() {const infoBox = document.getElementById('video-info-box');const videos = document.querySelectorAll('#VideosKognitivet .video,.IphoneVideo');const container = document.getElementById('VideosKognitivet');videos.forEach(video => {// Mousemove event fÃ¶r info box video.addEventListener('mousemove',(e) => {// Samla contribution data const tasks = [];if (video.dataset.music === "true") tasks.push("Music");if (video.dataset.filming === "true") tasks.push("Filming");if (video.dataset.editing === "true") tasks.push("Editing");if (video.dataset.directing === "true") tasks.push("Directing");// Uppdatera info box innehÃ¥ll infoBox.querySelector('.info-content').innerHTML = ` <h3 class="Contribution">Contribution</h3> <ul> ${tasks.map(task => `<li>${task}</li>`).join('')} </ul> `;// Positionera info box infoBox.style.display = 'block';infoBox.style.left = (e.clientX + 15) + 'px';infoBox.style.top = (e.clientY + 15) + 'px'});video.addEventListener('mouseleave',() => {infoBox.style.display = 'none'})})});// Lazy load Matter.js async function loadMatterJS() {if (!window.Matter) {console.log("ðŸ”„ Loading Matter.js dynamically...");const script = document.createElement('script');script.src = 'https://cdnjs.cloudflare.com/ajax/libs/matter-js/0.19.0/matter.min.js';await new Promise((resolve,reject) => {script.onload = resolve;script.onerror = reject;document.head.appendChild(script)});console.log("âœ… Matter.js loaded successfully")} } // Physics engine initialisering och setup async function initPhysics() {// Ladda Matter.js fÃ¶rst om det inte redan Ã¤r laddat await loadMatterJS();// Matter.js moduler const Engine = Matter.Engine,Render = Matter.Render,Runner = Matter.Runner,Bodies = Matter.Bodies,Composite = Matter.Composite,Mouse = Matter.Mouse,MouseConstraint = Matter.MouseConstraint;// Skapa physics engine och setup const engine = Engine.create();const container = document.getElementById('ImageDesign');// Renderer setup const render = Render.create({element:container,engine:engine,options:{width:window.innerWidth,height:window.innerHeight,wireframes:false,background:'transparent' } });// Mouse interaction setup const mouse = Mouse.create(render.canvas);const mouseConstraint = MouseConstraint.create(engine,{mouse:mouse,constraint:{stiffness:0.01,render:{visible:false },angularStiffness:0.01,length:0.1,damping:1 },collisionFilter:{mask:0x0001 },stiffness:0.1,maxForce:0.1 });Composite.add(engine.world,mouseConstraint);render.mouse = mouse;// Skapa vÃ¤ggar fÃ¶r physics world const walls = [ // Botten vÃ¤gg Bodies.rectangle(window.innerWidth/2,window.innerHeight + 30,window.innerWidth,60,{isStatic:true,render:{visible:false },friction:0.5,restitution:0.1,slop:0.1,// Minska genomtrÃ¤ngning density:1,// Ã–ka densitet fÃ¶r bÃ¤ttre kollision chamfer:{radius:0 } }),// VÃ¤nster vÃ¤gg Bodies.rectangle(-50,window.innerHeight/2,100,window.innerHeight,{isStatic:true,render:{visible:false },friction:0.5,restitution:0.1 }),// HÃ¶ger vÃ¤gg Bodies.rectangle(window.innerWidth + 50,window.innerHeight/2,100,window.innerHeight,{isStatic:true,render:{visible:false },friction:0.5,restitution:0.1 }) ];Composite.add(engine.world,walls);// Deklarera arrays och hÃ¤mta bilder const bodies = [];const images = document.querySelectorAll('.design-image');const originalSizes = new Map();// LÃ¤gg till i bÃ¶rjan av initPhysics let isAnyCentered = false;// Skapa en temporÃ¤r canvas fÃ¶r att analysera bildens alpha-kanal function createPhysicsBody(img) {// BerÃ¤kna maximal storlek baserat pÃ¥ bÃ¥de bredd och hÃ¶jd const maxWidth = window.innerWidth / 3;const maxHeight = window.innerHeight / 3;const aspectRatio = img.naturalWidth / img.naturalHeight;// BerÃ¤kna dimensioner som passar inom bÃ¥da begrÃ¤nsningarna let width = Math.min(img.naturalWidth,maxWidth);let height = width / aspectRatio;// Om hÃ¶jden Ã¤r fÃ¶r stor,justera baserat pÃ¥ hÃ¶jd istÃ¤llet if (height > maxHeight) {height = maxHeight;width = height * aspectRatio} // Spara original storlek originalSizes.set(img.src,{width,height });const startY = 100;// Skapa en temporÃ¤r canvas fÃ¶r att analysera bildens alpha-kanal const canvas = document.createElement('canvas');const ctx = canvas.getContext('2d');canvas.width = img.naturalWidth;canvas.height = img.naturalHeight;ctx.drawImage(img,0,0);// Samla punkter frÃ¥n bildens kanter const points = [];const imageData = ctx.getImageData(0,0,canvas.width,canvas.height);const data = imageData.data;// Sampla punkter med ett intervall fÃ¶r bÃ¤ttre prestanda const sampleInterval = 5;for (let y = 0;y < canvas.height;y += sampleInterval) {for (let x = 0;x < canvas.width;x += sampleInterval) {const alpha = data[((y * canvas.width + x) * 4) + 3];if (alpha > 127) {// Om pixeln inte Ã¤r transparent points.push({x:x,y:y })} } } // AnvÃ¤nd Matter.Bodies.fromVertices direkt med punkterna const body = Bodies.fromVertices( Math.random() * (window.innerWidth - width - 200) + width/2 + 100,startY,[points.map(p => ({x:p.x * (width / img.naturalWidth),y:p.y * (height / img.naturalHeight) }))],{render:{sprite:{texture:img.src,xScale:width / img.naturalWidth,yScale:height / img.naturalHeight } },restitution:0.2,friction:0.1,density:0.001,frictionAir:0.01,slop:0.05,collisionFilter:{category:0x0001,mask:0xFFFFFFFF } } );// LÃ¤gg till dubbelklick detektion let mouseDownTime = 0;let isDragging = false;Matter.Events.on(mouseConstraint,'mousedown',function(event) {const mousePosition = event.mouse.position;if (Matter.Bounds.contains(body.bounds,mousePosition)) {mouseDownTime = Date.now();isDragging = false} });Matter.Events.on(mouseConstraint,'mousemove',function(event) {if (mouseDownTime > 0) {isDragging = true} });Matter.Events.on(mouseConstraint,'mouseup',function(event) {const mouseUpTime = Date.now();const clickDuration = mouseUpTime - mouseDownTime;if (!isDragging && clickDuration < 150 && !isAnyCentered) {// LÃ¤gg till kontroll fÃ¶r isAnyCentered const originalSize = originalSizes.get(body.render.sprite.texture);const scaleFactor = 1.2;isAnyCentered = true;// SÃ¤tt flaggan nÃ¤r en bild centreras // Spara ursprungliga vÃ¤rden const startAngle = body.angle;const startPos = {x:body.position.x,y:body.position.y };const targetPos = {x:window.innerWidth / 2,y:window.innerHeight / 2 };const animationDuration = 500;const startTime = Date.now();// Stoppa all rÃ¶relse Matter.Body.setVelocity(body,{x:0,y:0 });Matter.Body.setAngularVelocity(body,0);body.isStatic = true;// Animera allt tillsammans const animate = () => {const elapsed = Date.now() - startTime;const progress = Math.min(elapsed / animationDuration,1);const easeProgress = 1 - Math.pow(1 - progress,3);// Animera rotation const currentAngle = startAngle + (0 - startAngle) * easeProgress;Matter.Body.setAngle(body,currentAngle);// Animera position const currentX = startPos.x + (targetPos.x - startPos.x) * easeProgress;const currentY = startPos.y + (targetPos.y - startPos.y) * easeProgress;Matter.Body.setPosition(body,{x:currentX,y:currentY });if (progress < 1) {requestAnimationFrame(animate)} else {setTimeout(() => {Matter.Body.setPosition(body,{x:window.innerWidth / 2,y:window.innerHeight / 2 });Matter.Body.scale(body,1,1);body.isStatic = false;isAnyCentered = false;// Ã…terstÃ¤ll flaggan nÃ¤r animeringen Ã¤r klar },1000)} };animate()} mouseDownTime = 0;isDragging = false});bodies.push(body);Composite.add(engine.world,body)} // Skapa physics bodies fÃ¶r alla bilder images.forEach(img => {if (img.complete) {createPhysicsBody(img)} else {img.addEventListener('load',() => createPhysicsBody(img))} img.style.display = 'none'});// Hover effekt fÃ¶r bilderen Matter.Events.on(mouseConstraint,'mousemove',function(event) {const mousePosition = event.mouse.position;bodies.forEach(body => {const distance = Matter.Vector.magnitude(Matter.Vector.sub(body.position,mousePosition));if (distance < 100) {Matter.Body.applyForce(body,body.position,{x:0,y:-0.003 })} })});// Rotationshantering fÃ¶r bilder Matter.Events.on(mouseConstraint,'mousedown',function(event) {const mousePosition = event.mouse.position;bodies.forEach(body => {const vertices = body.vertices;const center = body.position;const distanceToCenter = Matter.Vector.magnitude( Matter.Vector.sub(mousePosition,center) );if (distanceToCenter > Math.min(body.bounds.max.x - body.bounds.min.x,body.bounds.max.y - body.bounds.min.y) * 0.4) {body.inertia = body.mass * 1000} })});// Ã…terstÃ¤ll rotation vid slÃ¤pp Matter.Events.on(mouseConstraint,'mouseup',function() {bodies.forEach(body => {body.inertia = Infinity})});// Gravitation setup engine.world.gravity.y = 1;engine.world.gravity.scale = 0.001;// Dubbla gravitationen tillbaka till original // Spara runner referensen const runner = Runner.create();Runner.run(runner,engine);Render.run(render);// Spara referenser globalt window.currentPhysics = {engine:engine,render:render,runner:runner };// Window resize hantering window.addEventListener('resize',function() {render.canvas.width = window.innerWidth;render.canvas.height = window.innerHeight;Matter.Render.setPixelRatio(render,window.devicePixelRatio)})} // LÃ¤gg till en cleanup funktion function cleanupPhysics(engine,render,runner) {Matter.World.clear(engine.world);Matter.Engine.clear(engine);Matter.Render.stop(render);Matter.Runner.stop(runner);render.canvas.remove()} function createPhysicsVideo(videoElement) {const canvas = document.createElement('canvas');const ctx = canvas.getContext('2d');canvas.width = videoElement.videoWidth;canvas.height = videoElement.videoHeight;// Rita videon pÃ¥ canvas ctx.drawImage(videoElement,0,0);// Samla punkter frÃ¥n canvas (liknande som med bilder) const points = [];const imageData = ctx.getImageData(0,0,canvas.width,canvas.height);const data = imageData.data;// Sampla punkter for (let y = 0;y < canvas.height;y += 5) {for (let x = 0;x < canvas.width;x += 5) {const alpha = data[((y * canvas.width + x) * 4) + 3];if (alpha > 127) {points.push({x:x,y:y })} } } // Skapa fysikobjekt const body = Bodies.fromVertices( Math.random() * (window.innerWidth - 200) + 100,100,[points.map(p => ({x:p.x,y:p.y }))],{render:{sprite:{texture:videoElement.src,xScale:1,yScale:1 } } } );Composite.add(engine.world,body)} // SVG Interactivity document.addEventListener('DOMContentLoaded',function() {const svgObject = document.querySelector('.kvitto-svg');if (svgObject) {svgObject.addEventListener('load',function() {const svgDoc = svgObject.contentDocument;if (svgDoc) {// LÃ¤gg till klick-hÃ¤ndelser pÃ¥ SVG-elementen addSVGInteractivity(svgDoc)} })} });function addSVGInteractivity(svgDoc) {// Hitta alla rektanglar som ska fungera som hover-omrÃ¥den const hoverRects = svgDoc.querySelectorAll('rect.st2');hoverRects.forEach(rect => {// LÃ¤gg till hover-effekt pÃ¥ rektangeln rect.style.cursor = 'pointer';rect.style.transition = 'opacity 0.3s ease';rect.addEventListener('mouseenter',function() {// Hitta den Ã¶verordnade gruppen const parentGroup = this.closest('g');if (parentGroup) {// Hitta alla text-element i denna grupp const textElements = parentGroup.querySelectorAll('text,tspan');textElements.forEach(text => {text.style.opacity = '0.3'})} });rect.addEventListener('mouseleave',function() {// Hitta den Ã¶verordnade gruppen const parentGroup = this.closest('g');if (parentGroup) {// Ã…terstÃ¤ll alla text-element i denna grupp const textElements = parentGroup.querySelectorAll('text,tspan');textElements.forEach(text => {text.style.opacity = '1'})} });// LÃ¤gg till klick-hÃ¤ndelser pÃ¥ rektangeln rect.addEventListener('click',function() {const parentGroup = this.closest('g');if (parentGroup) {const textElements = parentGroup.querySelectorAll('text,tspan');let groupText = '';textElements.forEach(text => {groupText += text.textContent + ' '});// Hantera klick baserat pÃ¥ textinnehÃ¥ll if (groupText.includes('UX/UI Design') || groupText.includes('UX')) {showUXDesignContainer()} else if (groupText.includes('Web development') || groupText.includes('Web')) {showWebDesignContainer()} else if (groupText.includes('Vector graphics')) {showImageDesignContainer()} else if (groupText.includes('Video production') || groupText.includes('Video')) {showVideosKognitivetContainer()} else if (groupText.includes('Music production') || groupText.includes('Music')) {showMusicKognitivetContainer()} else if (groupText.includes('Animation')) {showAnimationDesignContainer()} } })});// Hitta klickbara element i SVG:en baserat pÃ¥ textinnehÃ¥ll eller ID:n const clickableElements = svgDoc.querySelectorAll('text,tspan,g[id*="UX"],g[id*="Web"],g[id*="Image"],g[id*="Video"],g[id*="Music"],g[id*="Animation"]');clickableElements.forEach(element => {const text = element.textContent || element.innerHTML;// LÃ¤gg till hover-effekt element.style.cursor = 'pointer';element.style.transition = 'opacity 0.3s ease';element.addEventListener('mouseenter',function() {this.style.opacity = '0.6'});element.addEventListener('mouseleave',function() {this.style.opacity = '1'});// LÃ¤gg till klick-hÃ¤ndelser baserat pÃ¥ textinnehÃ¥ll element.addEventListener('click',function() {if (text.includes('UX/UI Design') || text.includes('UX')) {showImageDesignContainer()} else if (text.includes('Web programming') || text.includes('Web')) {showWebDesignContainer();// Du kan Ã¤ndra detta till en web-specifik container } else if (text.includes('Image design')) {showImageDesignContainer()} else if (text.includes('Video production') || text.includes('Video')) {showVideosKognitivetContainer()} else if (text.includes('Music production') || text.includes('Music')) {showMusicKognitivetContainer()} else if (text.includes('Animation')) {showImageDesignContainer();// Du kan Ã¤ndra detta till en animation-specifik container } })});// LÃ¤gg till klick pÃ¥ projekt-lÃ¤nkar const projectElements = svgDoc.querySelectorAll('text,tspan');projectElements.forEach(element => {const text = element.textContent || element.innerHTML;if (text.includes('SkÃ¤rholmens Pall') || text.includes('HaSams') || text.includes('DG Development') || text.includes('Terran') || text.includes('Kognitivet')) {element.style.cursor = 'pointer';element.style.transition = 'opacity 0.3s ease';element.addEventListener('mouseenter',function() {this.style.opacity = '0.7'});element.addEventListener('mouseleave',function() {this.style.opacity = '1'});element.addEventListener('click',function() {if (text.includes('SkÃ¤rholmens Pall')) {window.open('https://www.skarholmenspall.se/','_blank')} else if (text.includes('HaSams')) {window.open('https://hasamsredovisning.se/','_blank')} else if (text.includes('DG Development')) {window.open('https://dgd.solutions/','_blank')} else if (text.includes('Terran')) {window.open('https://info.terran.ai/','_blank')} })} });// LÃ¤gg till klick pÃ¥ email const emailElements = svgDoc.querySelectorAll('text,tspan');emailElements.forEach(element => {const text = element.textContent || element.innerHTML;if (text.includes('@') || text.includes('victordegeer96@gmail.com')) {element.style.cursor = 'pointer';element.style.transition = 'opacity 0.3s ease';element.addEventListener('mouseenter',function() {this.style.opacity = '0.7'});element.addEventListener('mouseleave',function() {this.style.opacity = '1'});element.addEventListener('click',function() {window.location.href = 'mailto:victordegeer96@gmail.com'})} })} // HjÃ¤lpfunktioner fÃ¶r att visa olika containers function showImageDesignContainer() {console.log("ðŸ–¼ï¸ showImageDesignContainer() called");playTransitionAnimation(async () => {// Visa efter animationen Ã¤r klar console.log("ðŸ–¼ï¸ Setting ImageDesignContainer to flex");ImageDesignContainer.style.display = "flex";setTimeout(async () => {await initPhysics()},200)})} function showVideosKognitivetContainer() {console.log("ðŸŽ¥ showVideosKognitivetContainer() called");playTransitionAnimation(() => {// Visa efter animationen Ã¤r klar console.log("ðŸŽ¥ Setting VideosKognitivetContainer to flex");VideosKognitivetContainer.style.display = "flex"})} function showWebDesignContainer() {console.log("ðŸŒ showWebDesignContainer() called");playTransitionAnimation(() => {// Visa efter animationen Ã¤r klar console.log("ðŸŒ Setting WebDesignContainer to flex");WebDesignContainer.style.display = "flex"})} function showUXDesignContainer() {console.log("ðŸŽ¨ showUXDesignContainer() called");playTransitionAnimation(() => {// Visa efter animationen Ã¤r klar console.log("ðŸŽ¨ Setting UXDesignContainer to flex");UXDesignContainer.style.display = "flex"})} function showAnimationDesignContainer() {console.log("ðŸŽ¬ showAnimationDesignContainer() called");playTransitionAnimation(() => {// Visa efter animationen Ã¤r klar console.log("ðŸŽ¬ Setting AnimationDesignContainer to flex");AnimationDesignContainer.style.display = "flex"})} function showMusicKognitivetContainer() {console.log("ðŸŽµ showMusicKognitivetContainer() called");playTransitionAnimation(() => {// Visa efter animationen Ã¤r klar console.log("ðŸŽµ Setting MusicKognitivetContainer to flex");MusicKognitivetContainer.style.display = "flex"})} 
